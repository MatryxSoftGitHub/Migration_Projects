class aprrove : Step
	%StepInfo[Desc="aprrove",Group="null"]
	Main()
		JSExecutor.WaitWhileExists(30)
		// Inbox icon or button
		Btn_Inbox.Click()
		Sleep(5)
		String InboxItemName = "Ad Hoc Payment: "
		AppObject LabelInboxItemName = ApprovalProcessPages.InboxItemName.GetObject()
		LabelInboxItemName.Click()
		Sleep(5)
		if (Txt_areaComment.IsPresent() == true)
			Txt_areaComment.SetValue("Approved")
		Sleep(5)
		if (Btn_Approve.IsPresent() == true)
			Btn_Approve.Click()
		else if (Btn_Submit.IsPresent() == true)
			Btn_Submit.Click()
		else if (Btn_Ok.IsPresent() == true)
			Btn_Ok.Click()
		else
			Print("Check the button for approval")
class SendKeysAndClickEnterUsingTableName_RadioBtn : Step
	%StepInfo[Desc="SendKeysAndClickEnterUsingTableName_RadioBtn",Group="null"]
	parameter String TableName
	parameter String columnName
	parameter String TestData
	Main()
	throws InterruptedException
		if (TestData.Trim().IsEmpty())
			Print("Skipping the step as the user did not enter any data in the data sheet")
		else
			try
				Sleep(9)
				AppObject textColName = driver
				.findElement(By.xpath("//span[text()='" + columnName + "']/ancestor::td"))
				String dataAutoId = textColName.GetAttr("data-automation-id")
				Print(dataAutoId)
				List<String> colData = dataAutoId.Split("-")
				String colNum = colData[1]
				AppObject SpanTablePromotion = driver.findElement(By.xpath("(//caption[text()='" + TableName
				+ "']/following-sibling::tbody//td[contains(@headers,\"columnheader" + colNum
				+ "\")]//span[@data-automation-id=\"promptIcon\"])"))
				Sleep(2)
				SpanTablePromotion.IsPresent()
				SpanTablePromotion.Click()
				Sleep(2)
				AppObject TableNameWithRowHeader = driver.findElement(By.xpath("//caption[text()='" + TableName
				step + "']/following-sibling::tbody//td[contains
				TableNameWithRowHeader.SetValue(TestData)
				TableNameWithRowHeader.GenKeyEvents ("<Enter>")
				Sleep(5)
				AppObject Rbtn_Grid = driver
				.findElement(By.xpath("//div[text()='" + TestData + "']/..//input[@type=\"radio\"]"))
				if (Rbtn_Grid.IsPresent() == true)
					Sleep(5)
					Sleep(2)
					Rbtn_Grid.Click()
				AppObject VerifyTableSelectedData = driver.findElement(By.xpath("//td[contains(@headers,\"columnheader"
				+ colNum + "\")]//div[contains(@data-automation-id,\"selectedItem\")]//p[text()='" + TestData
				+ "']"))
				if (VerifyTableSelectedData.IsPresent())
					Print("Table Radio Data is selected " + TestData)
				else
					Print("Table Radio Data is not selected ")
			catch (Exception e)
				Print("Element not found")
class SendKeys_Table : Step
	%StepInfo[Desc="SendKeys_Table",Group="null"]
	parameter String columnName
	parameter String TestData
	Main()
		if (TestData.Trim().IsEmpty())
			Print("Skipping the step as the user did not enter any data in the data sheet")
		else
			try
				Sleep(5)
				AppObject textColName = CommonsFunctions.ColumnName.GetObject()
				String dataAutoId = textColName.GetAttr("data-automation-id")
				Print(dataAutoId)
				List<String> colData = dataAutoId.Split("-")
				String colNum = colData[1]
				AppObject inputRowHeader = CommonsFunctions.Columnheader.GetObject()
				inputRowHeader.Click()
				inputRowHeader.GenKeyEvents("<Ctrl-A>")
				Print("Entering the data" + TestData)
				inputRowHeader.SetValue(TestData)
				Print("Data has been entered into the field")
			catch (NoSuchElementException e)
				Print("Element not found")
			catch (Exception e)
				Print("Fail to sendkeys and click enter for the element")
class ClickOnSubmit : Step
	%StepInfo[Desc="ClickOnSubmit",Group="null"]
	Main()
		Sleep(2)
		Btn_Submit.IsPresent()
		Btn_Submit.Click()
class Uploadfile : Step
	%StepInfo[Desc="Uploadfile",Group="null"]
	Main()
		String filePath = "E:\\vidyaWorkspace482020\\EclipseWorkspace\\WorkdayBP_Selenium\\UploadFiles\\SampleUploadFile.txt"
		Sleep(2)
		Sleep(3)
		AttachmentsTab.Click()
		Btn_SelectFiles.IsPresent()
		Sleep(3)
		fileUpload.SetValue(filePath)
		Sleep(3)
class AddDetailsToLinesTab_Step : Step
	%StepInfo[Desc="AddDetailsToLinesTab_Step",Group="null"]
	Main()
		// Add details to lines tab in Create Ad Hoc Payment Page
		// ---------------------------------------------------------------------------------------------------
		JSExecutor.WaitWhileExists(30)
		Sleep(2)
		// Navigate to lines tab
		LinesTab.Click()
		Integer localVar = 1
		if (localVar > 1)
			AddRow.Click()
			Sleep(2)
		ColumnLine.Click()
		Header.IsPresent()
		Sleep(2)
		TextColmnName.Click()
		Sleep(2)
		// Spend Category
		func.SendKeysAndClickEnterUsingTableName_RadioBtn("Lines", "Spend Category", "Advertising")
		// Quantity
		func.SendKeys_Table("Quantity", "1" + Keys.ENTER)
		Sleep(2)
		// Unit Cost
		func.SendKeys_Table("Unit Cost", "1000")
		Sleep(2)
		// Cost Center
		func.SendKeysAndClickEnterUsingTableName_RadioBtn("Lines", "*Cost Center", "100-000 General Overhead")
		Sleep(2)
class AddDetailsToAdHocPaymentPage_Step : Step
	%StepInfo[Desc="AddDetailsToAdHocPaymentPage_Step",Group="null"]
	Main()
		// Add details to Create Ad Hoc Payment Page
		// ---------------------------------------------------------------------------------------------------
		Thread.WaitWhileExists(30)
		// Company
		Sleep(5)
		Txt_Company.SetValue("NYT USD  - New York Home Office")
		Txt_Company.GenKeyEvents ("<Enter>")
		Sleep(5)
		// Bank Account
		Txt_BankAccount.SetValue("NYT Operating - JPMC USD-4785")
		Txt_BankAccount.GenKeyEvents ("<Enter>")
		Sleep(5)
		// label payee ---------------------
		// Rdo_LabelPayee.Click()
		Rdo_LabelPayee.Click()
		Sleep(5)
		// Text payee
		Txt_LabelPayee.SetValue("AM Best Rating Services, Inc. - 9279")
		Sleep(2)
		Txt_LabelPayee.GenKeyEvents ("<Enter>")
		Sleep(5)
		//		// Currency//
						SpanIconOption.Click()
		//		Txt_Currency.Click()
		//		Txt_Currency.SetValue("USD")
		//		Txt_Currency.GenKeyEvents ("<Enter>")
		//
		//		// Payment Date
		//		Txt_PaymentDate.SetValue("08-31-2020")
		//
		//		// Payment Type
		//		Txt_PaymentType.SetValue("ACH")
		//		Sleep(2)
		//		Txt_PaymentType.GenKeyEvents ("<Enter>")
		// ControlTotalAmount
		Txt_ControlTotalAmount.GenKeyEvents("<Ctrl-A>")
		Txt_ControlTotalAmount.SetValue("1000")
		// Memo
		Txt_Memo.SetValue("TestMemo1")
class SearchForBP_Step : Step
	%StepInfo[Desc="SearchForBP_Step",Group="null"]
	parameter String sBPSearchValue
	Main()
		//Search for BP---------------------------------------------------------------------------------------------------
		Txt_BPSearch.WaitWhileExists(30)
		Txt_BPSearch.Click()
		Txt_BPSearch.SetValue(sBPSearchValue)
		Txt_BPSearch.GenKeyEvents ("<Enter>")
		Sleep(5)
		Lnk_BPSearch.Click()
class LoginToWorkday_Step : Step
	%StepInfo[Desc="LoginToWorkday_Step",Group="null"]
	Main()
		sTxt_Username.WaitWhileExists(30)
		sTxt_Username.SetValue(config.GetUsername())
		Txt_Password.SetValue(config.GetPassword())
		Btn_SignIn.Click()
		Lnk_Skip.Click()
class StartProxyAndActAs_Step : Step
	%StepInfo[Desc="StartProxyAndActAs_Step",Group="null"]
	parameter String sStartProxy
	parameter String sActAs
	Main()
		Txt_WorkdaySearch.WaitWhileExists(30)
		//Search for Start proxy--------------------------------------------------------------------------------------
		Txt_WorkdaySearch.GenKeyEvents("<Ctrl-A>")
		Txt_WorkdaySearch.SetValue(sStartProxy)
		Sleep(5)
		Txt_WorkdaySearch.GenKeyEvents ("<Enter>")
		Lnk_StartProxy.Click()
		//Act As Start proxy--------------------------------------------------------------------------------------------------
		Txt_ActAs.Click()
		Txt_ActAs.SetValue(sActAs)
		Txt_ActAs.GenKeyEvents ("<Enter>")
		Sleep(5)
		Btn_Ok.Click()
		Sleep(5)
class StopProxy_Step : Step
	%StepInfo[Desc="StopProxy_Step",Group="null"]
	parameter String sStopProxy
	Main()
		Txt_WorkdaySearch.WaitWhileExists(30)
		//Search for Stop proxy--------------------------------------------------------------------------------------
		Txt_WorkdaySearch.GenKeyEvents("<Ctrl-A>")
		Txt_WorkdaySearch.SetValue(sStopProxy)
		Sleep(5)
		Txt_WorkdaySearch.GenKeyEvents ("<Enter>")
		Lnk_StopProxy.Click()
		Sleep(3)
		Btn_Ok.Click()

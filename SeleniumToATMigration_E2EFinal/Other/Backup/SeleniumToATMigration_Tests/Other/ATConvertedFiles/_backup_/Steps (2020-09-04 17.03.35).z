class initWebDriver : Step
	%StepInfo[Desc="initWebDriver",Group="null"]
	parameter String URL
	Main()
		// Setting up Chrome driver path.
		System.setProperty("webdriver.chrome.driver", driverPath + "chromedriver.exe")
		// Launching Chrome browser.
		driver.get(URL)
		driver.manage().window().maximize()
class main : Step
	%StepInfo[Desc="main",Group="null"]
	parameter List<String> args
	Main()
	HomePage.sSearchBox.SetValue(sBookKey)
		AppObject searchResult = getElement(By.xpath(sSearchResult))
		HomePage.searchResult.Click()
		HomePage.By.xpath.WaitUntilExists(30,NotExistAction.None)
		HomePage.By.xpath.WaitUntilExists(30,NotExistAction.None)
		HomePage.getElement(By.xpath(sViewCartXPath)).Click()
		HomePage.getElement(By.cssSelector("form[id='view-cart-form'] button")).Click()
		HomePage.getElement(By.xpath("//input[@id='email' and @name='email']")).SetValue("test@testmail.com")
		// pause for a second and close the browser.
		Sleep(1)
		step endSession
	AppObject getElement(final By locator)
		.pollingEvery(5, TimeUnit.SECONDS).ignoring(NoSuchElementException.class)
			HomePage..WaitUntilExists(30,NotExistAction.None)
			@Override
			public AppObject apply(WebDriver arg0)
				return arg0.findElement(locator)
class ViewProductQualitybyImages : Step
	%StepInfo[Desc="ViewProductQualitybyImages",Group="null"]
	Main()
		ProductDetailsPage.Thread.WaitWhileExists(30)
		Print("View product function")
		Sleep(3)
		if (tabs.Count()>1)
			driver.switchTo().window(tabs.get(0))
			driver.close()
			driver.switchTo().window(tabs.get(1))
		Integer iNumOfProducts = ProductsViewImages.Count()
		Print(iNumOfProducts)
		Sleep(5)
		for (AppObject listProductImages in ProductsViewImages)
			Sleep(3)
			actions.moveToElement(listProductImages).perform()
			Sleep(2)
			ProductDetailsPage.ViewImagesBlock.Click()
			Sleep(2)
			actions.moveToElement(ViewImagesBlock).perform()
			Sleep(2)
			actions.moveToElement(ViewImagesBlock, 100, 50).perform()
			Sleep(2)
			actions.moveToElement(ViewImagesBlock, 60, 40).perform()
			Sleep(2)
			actions.moveToElement(ViewImagesBlock).perform()
class NavigateToBuyProduct : Step
	%StepInfo[Desc="NavigateToBuyProduct",Group="null"]
	Main()
		ProductDetailsPage.Thread.WaitWhileExists(30)
		Print("Buy the product using Buy now option")
		Sleep(3)
		if (tabs.Count()>1)
			driver.switchTo().window(tabs.get(0))
			driver.close()
			driver.switchTo().window(tabs.get(1))
		ProductDetailsPage.Btn_BUYNOW.WaitUntilExists(30,NotExistAction.None)
		ProductDetailsPage.Btn_BUYNOW.Click()
class AddAndNavigateToCart : Step
	%StepInfo[Desc="AddAndNavigateToCart",Group="null"]
	Main()
		ProductDetailsPage.Thread.WaitWhileExists(30)
		Print("Add the product to the cart")
		Sleep(3)
		if (tabs.Count()>1)
			driver.switchTo().window(tabs.get(0))
			driver.close()
			driver.switchTo().window(tabs.get(1))
		ProductDetailsPage.Btn_GoToCart.WaitUntilExists(30,NotExistAction.None)
		ProductDetailsPage.Btn_GoToCart.Click()
		Sleep(5)
		ProductDetailsPage.Btn_PlaceOrder.Click()
class RemoveProductsFromCart : Step
	%StepInfo[Desc="RemoveProductsFromCart",Group="null"]
	Main()
		try
			Actions actions = new Actions(driver)
			Print("Remove product from the cart")
			Sleep(1)
			ProductDetailsPage.Lnk_Cart.Click()
			Integer iNumOfProducts = Lnk_RemoveProducts.Count()
			//Print(iNumOfProducts)
			for (Integer i = 0; i <= iNumOfProducts; i++)
				Sleep(3)
				actions.moveToElement(Btn_RemoveInCart).perform()
				Sleep(2)
				ProductDetailsPage.Btn_RemoveInCart.Click()
				if (ProductDetailsPage.Blk_RemoveItem.IsPresent() == true)
					actions.moveToElement(Btn_RemoveInBlk).perform()
					Sleep(2)
					ProductDetailsPage.Btn_RemoveInBlk.Click()
					//Print("Product removed successfully")
		catch (Exception e)
			Print(e.getMessage())
class CheckProduct : Step
	%StepInfo[Desc="CheckProduct",Group="null"]
	Main()
		Print("Add details to Delivery Address to book product")
		ArrayList<String> tabs = new ArrayList<String>(driver.getWindowHandles())
		if (tabs.Count()>1)
			driver.switchTo().window(tabs.get(0))
			driver.close()
			driver.switchTo().window(tabs.get(1))
		Sleep(2)
		Txt_EnterPincode.GenKeyEvents("<Ctrl-A>")
		ProductDetailsPage.Txt_EnterPincode.SetValue("560094")
		ProductDetailsPage.Lnk_PincodeCheck.Click()
		Sleep(5)
		ProductDetailsPage.Lnk_FAssured.Click()
		Sleep(4)
		actions.moveToElement(Lnk_ProductRatings).perform()
		ProductDetailsPage.Lnk_ProductRatings.WaitUntilExists(10,NotExistAction.None)
		ProductDetailsPage.Lnk_ProductRatings.Click()
		Sleep(2)
class SelectTheReqProduct : Step
	%StepInfo[Desc="SelectTheReqProduct",Group="null"]
	parameter String sProductName
	Main()
		Print("Search a product in Flipkart Application")
		ProductPage.Itm_Popularity.WaitWhileExists(30)
		ProductPage.Itm_Popularity.Click()
		Sleep(5)
		for (AppObject listProducts in sTxt_SearchedProducts)
			// Print(listProducts.GetText())
			// Integer iNumOfProducts =sTxt_SearchedProducts.Count()
			// Print(iNumOfProducts)
			// if (listProducts.GetText() == (sProductName.Trim()))
			if (ProductPage.listProducts.GetText().contains(sProductName.Trim()))
				actions.moveToElement(listProducts).perform()
				ProductPage.listProducts.Click()
		Sleep(2)
class SelectProductUsingName : Step
	%StepInfo[Desc="SelectProductUsingName",Group="null"]
	parameter String sProductName
	Main()
		Print("Add details to Delivery Address to book product")
		ProductPage.ReqProduct.WaitWhileExists(30)
		Sleep(5)
		AppObject ReqProduct = driver.findElement(By.xpath("//*[contains(text(),'" + sProductName + "')]"))
		ProductPage.ReqProduct.Click()
class AddDetailsToDeliveryAddress : Step
	%StepInfo[Desc="AddDetailsToDeliveryAddress",Group="null"]
	Main()
		Print("Add details to Delivery Address to book product")
		ProductsBookingPage.Btn_AddressChange.WaitWhileExists(30)
		Sleep(2)
		ProductsBookingPage.Btn_AddressChange.Click()
		Sleep(2)
		ProductsBookingPage.Lnk_Edit.Click()
		Txt_Name.GenKeyEvents("<Ctrl-A>")
		ProductsBookingPage.Txt_Name.SetValue("MatryxsoftTech")
		Txt_MobileNumber.GenKeyEvents("<Ctrl-A>")
		ProductsBookingPage.Txt_MobileNumber.SetValue("8310618462")
		Txt_Pincode.GenKeyEvents("<Ctrl-A>")
		ProductsBookingPage.Txt_Pincode.SetValue("560094")
		Txt_Locality.GenKeyEvents("<Ctrl-A>")
		ProductsBookingPage.Txt_Locality.SetValue("Banglore")
		Txt_AddressArea.GenKeyEvents("<Ctrl-A>")
		ProductsBookingPage.Txt_AddressArea.SetValue("#9/2, 8th Cross, Outer Ring Rd, R.M.V. 2nd Stage,\r\n"
		+ "Lottegollahalli, Bengaluru, Karnataka 560094.")
		Txt_City.GenKeyEvents("<Ctrl-A>")
		ProductsBookingPage.Txt_City.SetValue("Banglore")
		Txt_Landmark.GenKeyEvents("<Ctrl-A>")
		ProductsBookingPage.Txt_Landmark.SetValue("Near Jalageramma Temple")
		Txt_AlternatePhone.GenKeyEvents("<Ctrl-A>")
		ProductsBookingPage.Txt_AlternatePhone.SetValue("0123456789")
		dropdown.selectByVisibleText("Karnataka")
		ProductsBookingPage.Rbtn_Work.Click()
		Sleep(2)
		ProductsBookingPage.Btn_SaveAndDeliveryHere.Click()
		Sleep(2)
		ProductsBookingPage.Btn_Continue.Click()
		Print("Added address details")
class AddDetailsPaymentOptions : Step
	%StepInfo[Desc="AddDetailsPaymentOptions",Group="null"]
	Main()
		Print("Add details to payment options to book product")
		Integer iNumOfProducts = ProductsBookingPage.PaymentOptions.WaitWhileExists(30)
		Integer iNumOfProducts = PaymentOptions.Count()
		// Print(iNumOfProducts)
		Sleep(5)
		for (AppObject listProducts in PaymentOptions)
			// Print(listProducts.GetText())
			if (ProductsBookingPage.listProducts.GetText().contains("Credit"))
				actions.moveToElement(listProducts).perform()
				ProductsBookingPage.listProducts.Click()
		Sleep(3)
		ProductsBookingPage.Txt_CardNumber.SetValue("0123456789012345")
		Pop_month.selectByVisibleText("09")
		Pop_year.selectByVisibleText("30")
		ProductsBookingPage.Txt_CVV.SetValue("1234")
		Print("Added payment details")
class NavigateToFlipkartHomePage : Step
	%StepInfo[Desc="NavigateToFlipkartHomePage",Group="null"]
	Main()
		Print("Add details to Delivery Address to book product")
		ProductsBookingPage.Lnk_FlipkartLogo.WaitWhileExists(30)
		Sleep(2)
		ProductsBookingPage.Lnk_FlipkartLogo.Click()



// //EX: call isDirectLoanApplicableF||CurrentState() 
// //********************************************************************************************* 
// Boolean isDirectLoanApplicableForCurrentState() 
	// Boolean bDirectLoanApplicableForCurrentState 
	// //handling f|| direct loan states 
	// if (sCurrentState == "NC" || sCurrentState == "SC" || sCurrentState == "FL" || sCurrentState == "GA" ||  sCurrentState == "AL"||  sCurrentState == "OH") 
		// bDirectLoanApplicableForCurrentState = true 
	// else 
		// bDirectLoanApplicableForCurrentState = false  
	// //Err|| Handling 
	// if (GetErrorCount() > 0) 
		// LogError("Failed Step/Function: isDirectLoanApplicableForCurrentState") 
	// return bDirectLoanApplicableForCurrentState

// killBranchPlusProcess()
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// //SystemUtil.CloseProcessByName "sfc_branch_plus.exe"
	// String sProcess = "Taskkill " + "/IM " + "sfc_branch_plus.exe" +"*" + " /" + "F"
	// System.Execute (sProcess)
	// Sleep (2)




// initilizeBranchPlusTest(String BranchPlusApp)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// //Kill oprn processesgetTotalPrinicpleBalance_From_PaymentTab
	// //SystemUtil.CloseProcessByName "iexplore.exe"
	// //SystemUtil.CloseProcessByName "chrome.exe"
	// String sProcess1 = "Taskkill " + "/IM " + "chrome.exe" +"*" + " /" + "F"
	// System.Execute (sProcess1)
	// 
	// //SystemUtil.CloseProcessByName "excel.exe"
	// String sProcess2 = "Taskkill " + "/IM " + "excel.exe" +"*" + " /" + "F"
	// System.Execute (sProcess2)
	// 
	// //SystemUtil.CloseProcessByName "sfc_branch_plus.exe"
	// String sProcess3 = "Taskkill " + "/IM " + "sfc_branch_plus.exe" +"*" + " /" + "F"
	// System.Execute (sProcess3)
	// 
	// System.Run (sBranchPlusApp)
	// if GetErrorCount()>0 
		// writeReportLog("Failed in initilizeBranchPlusTest","Failed", Error_Description,"")
	// 
	// //	Sleep (5)
		// //individual report configuration
	// //	Set oShell = CreateObject("Shell.Application")
	// //	oShell.ShellExecute BranchPlusApp,,,"runas",1
	// //	Set oShell = Nothing
	// //	DataTable.ImportSheet System.GetEnvVar("BranchPlusSharedPath") + System.GetEnvVar("currentState")&"\TestData\Config.xlsx","Config","Global"
	// //	LogFolder = DataStore.Query("Result_Path","Global")
	// //	LogFolder = configureCustomReport()
	// //Error handling
//
//
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																															
//	 
//	appVersion = getAppVersionNumber_From_DB()
//	buildNumber = getBuildNumber_From_DB()
//	
//	//TestDir = "\\sfcnas-cl-201\Shared\AUTOMATION\BranchPlus\" + currentState
//	//Load file paths required for scripts from external XML file
//	Environment.LoadFromFile "\\sfcnas-cl-201\Shared\AUTOMATION\BranchPlus\Global_Path_Configuration.xml"	
//	
//	System.GetEnvVar("BranchPlusSharedPath")
//	
//	//Getting Log Folder Path	
//	System.GetEnvVar("LogFolder")= getLogFolderPath()
//	 CopyFile(System.GetEnvVar("BranchPlusSharedPath")&"Templates\SFAutomationIndividualTest.html", System.GetEnvVar("LogFolder")&"\"&System.GetEnvVar("TestName")&".html")
//	
//	startTime = Time()
//
//	//Initilizing Test Report
//	 InitilizeTestReport(System.GetEnvVar("LogFolder")&"\"&System.GetEnvVar("TestName")&".html",startTime,"Branch+",currentState,appVersion + " | " + buildNumber,date(),System.GetEnvVar("TestName"))
//	
//	initializeCustomReport = startTime
//	//Error handling
//	if GetErrorCount()>0 
//		 writeReportLog("Failed in initializeCustomReport","Failed", Error_Description,"")
//	
//
//
//

// initializeCustomReport(String currentState)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// //Setting the Default Printer	
	// setWindowsDefaultPrinter("Generic / Text Only")
	// //Getting Required data from DB
	// appVersion = getAppVersionNumber_From_DB()
	// System.GetEnvVar("appVersion") = appVersion
	// buildNumber = getBuildNumber_From_DB()
	// TestDir = "\\sfcnas-cl-201\Shared\AUTOMATION\BranchPlus\" + currentState
	// //Load file paths required for scripts from external XML file
	// Environment.LoadFromFile "\\sfcnas-cl-201\Shared\AUTOMATION\BranchPlus\Global_Path_Configuration.xml"	
	// //System.GetEnvVar("BranchPlusSharedPath")
	// //Getting Log Folder Path	
	// System.GetEnvVar("LogFolder")= getLogFolderPath()
	// // CopyFile(System.GetEnvVar("BranchPlusSharedPath")&"Templates\SFAutomationIndividualTest.html", System.GetEnvVar("LogFolder")&"\"&System.GetEnvVar("TestName")&".html")
	// //Fetching Branch ID From DB
	// branchID = getBranchID_From_DB()
	// //Fetching the Current UFT Version	
	// UFTVersion = System.GetEnvVar("ProductVer")
	// //Special Handling of Data Sheet
	// if (DataTable.GetSheet(dtGlobalSheet).GetCurrentRow < 1 and UFTVersion <> "15.0.2") || (UFTVersion =  "15.0.2" and DataTable.GetSheet(dtGlobalSheet).GetCurrentRow = 1) 
		// //Fetching Branch ID From DB
		// branchID = getBranchID_From_DB()
		// startTime = Time()
		// //Copying FIle
		// //*** CopyFile("\\sfcnas-cl-201\Shared\AUTOMATION\BranchPlus\Templates\SFAutomationIndividualTest.html", System.GetEnvVar("LogFolder")&"\"&System.GetEnvVar("TestName")&".html")
		// CopyFile("\\sfcnas-cl-201\Shared\AUTOMATION\BranchPlus\Templates\SFAutomationIndividualTest.html", System.GetEnvVar("LogFolder")&"\"&System.GetEnvVar("TestName")& ""& System.GetEnvVar("TestNameSuffix")&".html")
		// //Initilizing Test Report
		// //*** InitilizeTestReport(System.GetEnvVar("LogFolder")&"\"&System.GetEnvVar("TestName")&".html",startTime,"Branch+",currentState + "_" + branchID,appVersion + " | " + buildNumber,date(),System.GetEnvVar("TestName"))
		// InitilizeTestReport(System.GetEnvVar("LogFolder")&"\"&System.GetEnvVar("TestName")& ""& System.GetEnvVar("TestNameSuffix") &".html",startTime,"Branch+",currentState + "_" + branchID,appVersion + " | " + buildNumber,date(),System.GetEnvVar("TestName"))
	// //Identifying which Suite to Execute
	// identifySuiteToExecute()
	// //Validate Check Number and update
	// checkAndUpdate_MaxCheckNumber_Disbursement()
	// //Return the startTime
	// initializeCustomReport = startTime
	// //Error handling
	// if GetErrorCount()>0 
		// writeReportLog("Failed in initializeCustomReport","Failed", Error_Description,"")

// getLogFolderPath()	
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// LogFolder = configureCustomReport()
	// //UFT Logger
	// LogSuccessMessage("Custom Results Folder Path",LogFolder)
	// //Returning
	// getLogFolderPath = LogFolder
	// //Error handling
	// if GetErrorCount()>0 
		// writeReportLog("Failed in getLogFolderPath","Failed", Error_Description,"")
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																															
//	 
////	DataTable.ImportSheet System.GetEnvVar("BranchPlusSharedPath") + System.GetEnvVar("currentState")&"\TestData\Config.xlsx","Config","Global"
////	configureCustomReport = DataStore.Query("Result_Path","Global")
//	DataTable.AddSheet("Config")
//	DataTable.ImportSheet System.GetEnvVar("BranchPlusSharedPath") + System.GetEnvVar("currentState")&"\TestData\Config.xlsx","Config","Config"
//	configureCustomReport = DataStore.Query("Result_Path","Config")
//	//Error handling
//	if GetErrorCount()>0 
//		 writeReportLog("Failed in configureCustomReport","Failed", Error_Description,"")
//	
//
// configureCustomReport()	
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// //	DataTable.ImportSheet System.GetEnvVar("BranchPlusSharedPath") + System.GetEnvVar("currentState")&"\TestData\Config.xlsx","Config","Global"
	// //	configureCustomReport = DataStore.Query("Result_Path","Global")
	// DataTable.AddSheet("Config")
	// DataTable.ImportSheet System.GetEnvVar("BranchPlusSharedPath") + System.GetEnvVar("currentState")&"\TestData\Config.xlsx","Config","Config"
	// //Current Host Name
	// hostName = System.GetEnvVar("LocalHostName")
	// //rowCnt
	// rowCnt = DataTable.GetSheet("Config").GetRowCount	
	// found = false
	// //identifying the Log Folder
	// for itr = 1 To rowCnt Step 1
		// actHostName = DataStore.Query("LocalHostName","Config")	
		// if hostName = actHostName 
			// configureCustomReport = DataStore.Query("Result_Path","Config") 
			// found = true
			// Exit for
		// else
			// DataTable.GetSheet("Config").SetValue(Row
	// //Default Value
	// if found = false 
		// DataTable.GetSheet("Config").SetValue(CurrentRow(1)
		// configureCustomReport= DataStore.Query("Result_Path","Config")
	// //Error handling
	// if GetErrorCount()>0 
		// writeReportLog("Failed in configureCustomReport","Failed", Error_Description,"")

//Created for Month Purpose
// configureCustomReportMEnd()	
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
//	DataTable.ImportSheet System.GetEnvVar("BranchPlusSharedPath") + System.GetEnvVar("currentState")&"\TestData\Config.xlsx","Config","Global"
//	configureCustomReport = DataStore.Query("Result_Path","Global")
	// DataTable.AddSheet("Config")
	// DataTable.ImportSheet System.GetEnvVar("BranchPlusSharedPathMEnd") + System.GetEnvVar("currentState")&"\TestData\Config.xlsx","Config","Config"
	// //Current Host Name
	// hostName = System.GetEnvVar("LocalHostName")
	// //rowCnt
	// rowCnt = DataTable.GetSheet("Config").GetRowCount	
	// found = false
	// //identifying the Log Folder
	// for itr = 1 To rowCnt Step 1
		// actHostName = DataStore.Query("LocalHostName","Config")	
		// if hostName = actHostName 
			// configureCustomReportM= DataStore.Query("Result_Path","Config") 
			// found = true
			// Exit for
		// else
			// DataTable.GetSheet("Config").SetValue(Row
	// //Default Value
	// if found = false 
		// DataTable.GetSheet("Config").SetValue(CurrentRow(1)
		// configureCustomReportMEnd= DataStore.Query("Result_Path","Config")
	// //Error handling
	// if GetErrorCount()>0 
		// writeReportLog("Failed in configureCustomReportMEnd","Failed", Error_Description,"")
// 
//**************************************************************************************
//---------------------
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																															
//	LoginWin = Window("BranchPLUSLogon").WinEdit("txtUserName").IsPresent()
//		if LoginWin 
//		//Enter System user credentials
//		Window("BranchPLUSLogon").WinEdit("txtUserName").SetValue( userName
//		Window("BranchPLUSLogon").WinEdit("txtPassword").SetValue( userPassword
//		//Click on OK
//		Window("BranchPLUSLogon").WinButton("btnOK").Click()
//		
//		//Verify Network login Authentication
//		NetworkLoginWindow = Window("BranchPLUSLogon").Window("NetworkLoginAuthentication").WinEdit("txtNetworkUser").IsPresent()
//			if NetworkLoginWindow 
//				Window("BranchPLUSLogon").Window("NetworkLoginAuthentication").WinEdit("txtNetworkUser").SetValue( NetworkUser
//				Window("BranchPLUSLogon").Window("NetworkLoginAuthentication").WinEdit("txtNetworkPassword").SetValue( NetworkPasscode
//				Window("BranchPLUSLogon").Window("NetworkLoginAuthentication").WinButton("btnOk").Click()
//					winVisible = BranchPlus.IsPresent()
//					if winVisible 
//						 writeReportLog("Validate Branch Plus Login","Passed",FailComments,"")
//					else
//						 writeReportLog("Validate Branch Plus Login","Failed",FailComments,"")
//					
//				
//			else
//				//Fail Log - Branch Network Login window not displayed
//				 writeReportLog("Branch Plus Network Login window not displayed","Failed",FailComments,"")
//			
//
//		else
//		//Fail Log - Branch System Login window not displayed
//		 writeReportLog("Branch Plus System Login window not displayed","Failed",FailComments,"")
//			
//
//*************************************************************
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																															
//	 
//	
//	//Load file paths required for scripts from external XML file
//	//Environment.LoadFromFile "\\\sfcnas-cl-201\Shared\BranchPlus\Global_Path_Configuration.xml"
//	
//	if w_bp_frame.WaitWhileExists(5) 
//		
//		//w_bp_frame.PbObject("pbname:=mdi_1")
//		if PbWindow("w_bp_frame").PbObject("PbObject").WaitWhileExists(5) || BranchPlus.CreditDecision.WaitWhileExists(5) 
//			//Initilize Test - Kill Previous processes and map result html file
//			 initilizeBranchPlusTest("C:\BranchRoot\App\sfc_branch_plus\RunBranchPlus.CMD")
//			//Login to Branch Application
//			 Login_BranchPlus_Application()
//			
//			//Getting the User ID (Cashdrawer)
//			userID = get_Existing_CashDrawer_User()
//			
//			//Login into Branch with Cash Drawer User
//			 changeLogInUser(userID,"auto123")
//			
//		else
//		//Login to Branch Application is not Required			
//				
//	else
//		//Initilize Test - Kill Previous processes and map result html file
//		 initilizeBranchPlusTest("C:\BranchRoot\App\sfc_branch_plus\RunBranchPlus.CMD")
//		//Login to Branch Application
//		 Login_BranchPlus_Application()
//		
//		//Getting the User ID (Cashdrawer)
//		userID = get_Existing_CashDrawer_User()
//		
//		//Login into Branch with Cash Drawer User
//		 changeLogInUser(userID,"auto123")
//
//	
//	
//	 if GetErrorCount()>0  			
//		      writeReportLog("Failed in Step/BranchPlusLogin","Failed", Error_Description ,"")
//	 	
//
//**********************************************************

//New Login Function
// BranchPlusLogin()
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// //Load file paths required for scripts from external XML file
	// //Environment.LoadFromFile "\\\sfcnas-cl-201\Shared\BranchPlus\Global_Path_Configuration.xml"
	// //Handling Un Expected Dialog
	// handle_Dialog("sfc_branch_plus\.exe","Close the program")
	// handle_Dialog("RDP Clip Monitor","Close the program")	
	// //Validating if there are any open windows	 
	// if BranchPlus.WaitWhileExists(2) 
		// //Checking if there are any child windows
		// Set oDesc = Description.Create()
		// oDesc("micclass").value = "PbWindow"
		// Set objArr = BranchPlus.GetChildren(oDesc)
		// if  objArr.count() >= 1 
		// //Initilize Test - Kill Previous processes and map result html file
			// initilizeBranchPlusTest("C:\BranchRoot\App\sfc_branch_plus\RunBranchPlus.CMD")
			// //Handling Un Expected Dialog
			// handle_Dialog("sfc_branch_plus\.exe","Close the program")
			// handle_Dialog("RDP Clip Monitor","Close the program")
			// //Login to Branch Application
			// Login_BranchPlus_Application()		  	
			// //Getting the User ID (Cashdrawer)
			// userID = get_Existing_CashDrawer_User()
			// //Login into Branch with Cash Drawer User
			// changeLogInUser(userID,"auto123")		
	// else
		// //Initilize Test - Kill Previous processes and map result html file
		// initilizeBranchPlusTest("C:\BranchRoot\App\sfc_branch_plus\RunBranchPlus.CMD")
		// //Handling Un Expected Dialog
		// handle_Dialog("sfc_branch_plus\.exe","Close the program")
		// handle_Dialog("RDP Clip Monitor","Close the program")
		// //Login to Branch Application
		// Login_BranchPlus_Application()
		// //Getting the User ID (Cashdrawer)
		// userID = get_Existing_CashDrawer_User()
		// //Login into Branch with Cash Drawer User
		// changeLogInUser(userID,"auto123")
	// //Error Handling
	// if GetErrorCount()>0  			
			// writeReportLog("Failed in Step/BranchPlusLogin","Failed", Error_Description ,"")

//*****************************************************************************************
//@methodName: BranchPlusLogin_Without_CashDrawer()
//@Author Jeevan
//@Date 27 June 2018
//@Description This will login to BranchPlus application with out assining Cash Drawer
//*****************************************************************************************
// BranchPlusLogin_Without_CashDrawer()
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// //	if w_bp_frame.WaitWhileExists(5) 
	// //		
	// //		//w_bp_frame.PbObject("pbname:=mdi_1")
	// //		if PbWindow("w_bp_frame").PbObject("PbObject").WaitWhileExists(5) || BranchPlus.CreditDecision.WaitWhileExists(5) 
	// //			//Initilize Test - Kill Previous processes and map result html file
	// //			 initilizeBranchPlusTest("C:\BranchRoot\App\sfc_branch_plus\RunBranchPlus.CMD")
	// //			//Login to Branch Application
	// //			 Login_BranchPlus_Application()
	// //		else
	// //		//Login to Branch Application is not Required			
	// //				
	// //	else
	// //		//Initilize Test - Kill Previous processes and map result html file
	// //		 initilizeBranchPlusTest("C:\BranchRoot\App\sfc_branch_plus\RunBranchPlus.CMD")
	// //		//Login to Branch Application
	// //		 Login_BranchPlus_Application()
	// //		
	// //	
	// // if w_bp_frame.WaitWhileExists(5) 
		// // if BranchPlus.btnClose.WaitWhileExists(5) || BranchPlus.CreditDecision.WaitWhileExists(5)  || w_bp_frame.w_view_report.WaitWhileExists(5) 
			// // //Initilize Test - Kill Previous processes and map result html file
			// // initilizeBranchPlusTest("C:\BranchRoot\App\sfc_branch_plus\RunBranchPlus.CMD")
			// // //Handling Un Expected Dialog
			// // handle_Dialog("sfc_branch_plus\.exe","Close the program")
			// // handle_Dialog("RDP Clip Monitor","Close the program")
			// // //Login to Branch Application
			// // Login_BranchPlus_Application()
		// // else
	// // else
		// // //Initilize Test - Kill Previous processes and map result html file
		// // initilizeBranchPlusTest("C:\BranchRoot\App\sfc_branch_plus\RunBranchPlus.CMD")
		// // //Handling Un Expected Dialog
		// // handle_Dialog("sfc_branch_plus\.exe","Close the program")
		// // handle_Dialog("RDP Clip Monitor","Close the program")
		// // //Login to Branch Application
		// // Login_BranchPlus_Application()
	// // if GetErrorCount()>0  			
		// // writeReportLog("Failed in Step/BranchPlusLogin_Without_CashDrawer","Failed", Error_Description ,"")

//*****************************************************************************************
//@methodName: Login_BranchPlus_Application()
//@Author Ranjitha
//@Date 18 June 2018
//@Description This will login to BranchPlus application USING Support User
////*****************************************************************************************
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																															
//	 
//	//**************************************************************************************	
//	loginSheetPath = System.GetEnvVar("BranchPlusSharedPath") + "\LoginDetails.xlsx"
//
//	//Importing Test Data from Excel Shet(specific sheet)
//	 importSpecificSheet(loginSheetPath,"Login")
//	
//	user_Name = DataStore.Query("UserName","Login")
//	password = DataStore.Query("Password","Login")
//	network_Username = DataStore.Query("NetworkUsername","Login")
//	network_Passcode = DataStore.Query("NetworkPasscode","Login")
//	//**************************************************************************************
//
//	LoginWin = Window("BranchPLUSLogon").WinEdit("txtUserName").IsPresent()
//		if LoginWin 
//		//Enter System user credentials
//		Window("BranchPLUSLogon").WinEdit("txtUserName").SetValue( user_Name
//		Window("BranchPLUSLogon").WinEdit("txtPassword").SetValue( password
//		//Click on OK
//		Window("BranchPLUSLogon").WinButton("btnOK").Click()
//		
//		//Verify Network login Authentication
//		NetworkLoginWindow = Window("BranchPLUSLogon").Window("NetworkLoginAuthentication").WinEdit("txtNetworkUser").IsPresent()
//			if NetworkLoginWindow 
//				Window("BranchPLUSLogon").Window("NetworkLoginAuthentication").WinEdit("txtNetworkUser").SetValue( network_Username
//				Window("BranchPLUSLogon").Window("NetworkLoginAuthentication").WinEdit("txtNetworkPassword").SetValue( network_Passcode
//				Window("BranchPLUSLogon").Window("NetworkLoginAuthentication").WinButton("btnOk").Click()
//					//Handling Version Mismatch pop up
//					 handle_VersionMismatch_Popup()
//					winVisible = BranchPlus.IsPresent()
//					if winVisible 
//						// writeReportLog("Validate Branch Plus Login","Passed",FailComments,"")
//					else
//						 writeReportLog("Validate Branch Plus Login","Failed",FailComments,"")
//					
//				
//			else
//				//Fail Log - Branch Network Login window not displayed
//				 writeReportLog("Branch Plus Network Login window not displayed","Failed",FailComments,"")
//			
//		else
//		//Fail Log - Branch System Login window not displayed
//		 writeReportLog("Branch Plus System Login window not displayed","Failed",FailComments,"")
//			
//		//Error Handling
//		if GetErrorCount()>0  			
//		 writeReportLog("Failed in Step/Login_BranchPlus_Application","Failed", Error_Description ,"")
//	
//
//
// Login_BranchPlus_Application()
	// %FuncInfo[Desc="This will login to BranchPlus application USING Support User.",Group="BranchPlusFunctions"]
	// String loginSheetPath
	// Boolean bLoginWin,bNetworkLoginWindow,bwinVisible
	// //oginSheetPath = System.GetEnvVar("BranchPlusSharedPath") + "LoginDetails.xlsx")
	// //Importing Test Data from Excel Shet(specific sheet)
	// //	 importSpecificSheet(loginSheetPath,"Login")
	// // DataTable.AddSheet("Login")
	// // DataTable.ImportSheet loginSheetPath,"Login","Login"
	// // DataTable.GetSheet("Login").SetValue(CurrentRow 1
	// // user_Name = DataStore.Query("UserName","Login")
	// // password = DataStore.Query("Password","Login")
	// // network_Username = DataStore.Query("NetworkUsername","Login")
	// // network_Passcode = DataStore.Query("NetworkPasscode","Login")
	// //**************************************************************************************
	// //##############
	// //Handling Special Case i.e, SOme Time Branch Login Window will not get identified as PBWindow.
	// //##############
	// String user_Name, password, network_Username, network_Passcode
	// if BranchPLUSLogon.WaitWhileExists(5) 
		// killBranchPlusProcess()
		// Sleep (3)
		// System.Run("C:\BranchRoot\App\sfc_branch_plus\RunBranchPlus.CMD")
		// //initilizeBranchPlusTest("C:\BranchRoot\App\sfc_branch_plus\RunBranchPlus.CMD")
		// Sleep (2)
	// //PbWindow("Pbname:=w_bp_logon").Highlight
	// bLoginWin = BranchPlus.CashDrawerLoginWindow.txtuserid.IsPresent()
	// if bLoginWin == true
		// //Enter System user credentials
		// BranchPlus.CashDrawerLoginWindow.txtuserid.SetValue(user_Name)
		// BranchPlus.CashDrawerLoginWindow.txtuserid.SetValue(password)
		// //Click on OK
		// BranchPlus.CashDrawerLoginWindow.btnOK.Click()
		// //Verify Network login Authentication
		// bNetworkLoginWindow =BranchPlus.CashDrawerLoginWindow.w_bp_logon_network.tx_tuserid.IsPresent()
		// if bNetworkLoginWindow == true
			// BranchPlus.CashDrawerLoginWindow.w_bp_logon_network.tx_tuserid.SetValue(network_Username)
			// BranchPlus.CashDrawerLoginWindow.w_bp_logon_network.txt_password.SetValue(network_Passcode)
			// BranchPlus.CashDrawerLoginWindow.w_bp_logon_network.btn_OK.Click()
			// //Handling Version Mismatch pop up
			// handle_VersionMismatch_Popup()
			// bwinVisible = BranchPlus.IsPresent()
			// if bwinVisible 
				// // writeReportLog("Validate Branch Plus Login","Passed",FailComments,"")
			// else
				// writeReportLog("Validate Branch Plus Login","Failed",FailComments,"")
		// else
			// //Fail Log - Branch Network Login window not displayed
			// writeReportLog("Branch Plus Network Login window not displayed","Failed",FailComments,"")
	// else
		// //Fail Log - Branch System Login window not displayed
		// writeReportLog("Branch Plus System Login window not displayed","Failed",FailComments,"")
	// //Removing the Data Sheet from UFT
	// // DataTable.DeleteSheet("Login")
	// //Error Handling

//**************************************************************************
//@MethodName changeLogInUser
//@Description this fucntion will help in changing the Logged into User 
//**************************************************************************
// changeLogInUser(String newUserId,String pwd)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// String currentState = System.GetEnvVar("currentState")
	// BranchPlus.SetActive()
	// UA.GenKeyEvents("<F4>")
	// //	//Enter System user credentials
	// //		w_bp_frame.PbWindow("Pbname:=w_bp_logon").PbEdit("pbname:=sle_userid").SetValue( user_Name
	// //		w_bp_frame.PbWindow("Pbname:=w_bp_logon").PbEdit("pbname:=sle_password").SetValue( password
	// //		//Click on OK
	// //		w_bp_frame.PbWindow("Pbname:=w_bp_logon").PbButton("pbname:=cb_ok").Click()
	//  BranchPlus.CashDrawerLoginWindow.IsPresent()
	// 
	// BranchPlus.CashDrawerLoginWindow.txtuserid.SetValue(newUserId)
	// BranchPlus.CashDrawerLoginWindow.txtpassword.SetValue(pwd)  
	// BranchPlus.CashDrawerLoginWindow.btnOK.Click()
	// if BranchPlus.CashDrawerLoginWindow.Question.btnYes.IsPresent()
		// //Clicking on No Button in Question.. Pop Up
		// //.Dialog("Question").WinButton("btnNo").IsPresent()
		// BranchPlus.CashDrawerLoginWindow.Question.btnNo.Click()
		// Print("Login with userassigned with cash drawer " + newUserId + "Current state " + currentState + "is Successful")
	// else
		// LogError("Login with userassigned with cash drawer " + newUserId + "Current state " + currentState + "was Failed")


//**************************************************************************************
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																															
// Real GetValue_PBDataWindow(AppObject tblPBDataWindow,String RowNumber,String ColumnName)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// tblPBDataWindow.HoverMouse () ()
	// Real rGetValue_PBDataWindow = tblPBDataWindow.GetCellData(RowNumber,ColumnName)	
	// return rGetValue_PBDataWindow

//**************************************************************************************
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																															
// SetValue_PBDataWindow(AppObject tblPBDataWindow,String RowNumber,String ColumnName,String CellValue)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// //tblPBDataWindow.HoverMouse () ()
	// Sleep (2)
	// //if req radio is unchecked - check it
	// String reqColumnStatus = tblPBDataWindow.GetCellData(RowNumber,ColumnName)
	// if reqColumnStatus == CellValue 
		// //Do nothing
	// else
		// tblPBDataWindow.SetValue(RowNumber,ColumnName,CellValue)

//**************************************************************************************
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																															
// TypeText_PBDataWindow(AppObject tblPBDataWindow,String RowNumber,String ColumnName,String CellValue)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// if tblPBDataWindow.IsPresent()
		// //tblPBDataWindow.HoverMouse () ()
		// tblPBDataWindow.Click(RowNumber,ColumnName)
		// Sleep(2)
		// tblPBDataWindow.TypeKeys (CellValue)

//**************************************************************************************
//This will click on  Button in Credit Decision Window
// clickOnButton_CreditDecisionWindow()
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// //click on next
	// BranchPlus.CreditDecision.btnNext.Click()
	// Sleep (5)


//**********************************************************************************
//This will validate the First Payment Date in the Credit Decision Window
// validateFirstPaymentDate_CreditDecisionWindow()
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// SleepTillCreditDecisionLoads("STEP 6")
	// Set crdDecision = BranchPlus.CreditDecision.PbDataWindow("tbldwStep")
	// //Verify First payment date validation 
	// loanDate = GetValue_PBDataWindow(crdDecision,"#1","funding_dt")
	// firstPaymentdate = GetValue_PBDataWindow(crdDecision,"#1","first_pmt_due_dt")
	// //Validating the Data
	// validateDataAndReport(Cdate(firstPaymentdate),DateAdd("m",1,CDate(loanDate)),"Validate First Payment date: " + Cdate(firstPaymentdate))	
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to validateFirstPaymentDate_CreditDecisionWindow","Failed", Error_Description ,"")

//
////**********************************************************************************
////This will enter the Value in the Charge Amount Field in Credit Decision Window
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																															
//	  
//	 //Enter value in charge amount fields
//	Set crdDecision1 = BranchPlus.CreditDecision.PbDataWindow("tbldwcomponent")
//    if System.GetEnvVar("currentState") = "FL" 
//		 SetValue_PBDataWindow(crdDecision1,"#2","charge_amt","250")	
//	     SetValue_PBDataWindow(crdDecision1,"#3","charge_amt","1100")
//	else
//		 SetValue_PBDataWindow(crdDecision1,"#1","charge_amt","250")	
//	     SetValue_PBDataWindow(crdDecision1,"#2","charge_amt","1100")
//		
//	//Error Handling
//	if GetErrorCount()>0  			
//		 writeReportLog("Failed to enterChargeAmount_CreditDecisionWindow","Failed", Error_Description ,"")
//		
//
//**********************************************************************************
//Selecting the Application Status in Credit Decision Window
// setValueInApplicationStatus_CreditDecisionWindow(String applicationStatus)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// //Enter details in Application status
	// SleepTillCreditDecisionLoads("STEP 6")
	// Set crdDecision = BranchPlus.CreditDecision.PbDataWindow("tbldwStep")
	// crdDecision.SelectCell "#1","app_status"
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to setValueInApplicationStatus_CreditDecisionWindow","Failed", Error_Description ,"")

//**********************************************************************************
//Clicking on Finish Button
// clickOnFinishButton_CreditDecisionWindow()
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// BranchPlus.CreditDecision.PbButton("Finish").Click()
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to clickOnFinishButton_CreditDecisionWindow","Failed", Error_Description ,"")

//********************************************************************************
//This will handel the USPS Window
// handleUSPSWindow()
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// if BranchPlus.CreditDecision.PbWindow("USPS_Window").IsPresent() 
		// BranchPlus.CreditDecision.PbWindow("USPS_Window").PbButton("btnUseAddressAbove").Click()
		// // writeReportLog("USPS Window appeared and Handeled","Passed","","")	

//********************************************************************************
//This will Open the Maintenance Window  by Pressing the F2 Key and Search with SSN 
// openMaintenanceAndSearchWithSSNNumber(String ssn)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// Sleep (5)
	// BranchPlus.SetActive()
	// sendKeys("{F2}")
	// Sleep (2	)
	// if BranchPlus.PbWindow("CustomerSearchWindow").PbDataWindow("dw_search").IsPresent() 
		// BranchPlus.PbWindow("CustomerSearchWindow").PbDataWindow("dw_search").SetValue(CellData "#1","ssn",ssn
		// BranchPlus.PbWindow("CustomerSearchWindow").PbButton("btnOK").Click()
		// writeReportLog("Search With SSN Number >> " + "******" + RIGHT(ssn,4) ,"Passed","","")
	// else
		// writeReportLog("Search With SSN Number >> " + "******" + RIGHT(ssn,4),"Failed","","")
	// Sleep(5)
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to openMaintenanceAndSearchWithSSNNumber","Failed", Error_Description ,"")

//********************************************************************************
//This will Click on the Save Button
// clickOnSaveButon()
	// %FuncInfo[Desc="This will Click on the Save Button",Group="BranchPlusFunctions"]
	// BranchPlus.InsightObject("btnSave").Click()
	// Sleep (5)
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to clickOnSaveButon","Failed", Error_Description ,"")

//********************************************************************************
//This will set the values in the Fields US Resident Radio BUton, credit Score + Email
// setValuesIn_CustomerTab(String USResident,String creditScore,String Email)
	// %FuncInfo[Desc="This will set the values in the Fields US Resident Radio BUton, credit Score + Email",Group="BranchPlusFunctions"]
	// //BranchPlus.CustomerF2Window.PbDataWindow("dw_cust").Check CheckPoint("dw_cust")
	// if Err.count <> 0 
	// Sleep (5)
	// Set custTabPbWindow = BranchPlus.CustomerF2Window.PbDataWindow("dw_cust")
	// if custTabPbWindow.IsPresent() 
		// SetValue_PBDataWindow(custTabPbWindow,"#1","us_resident_yn",USResident)
		// SetValue_PBDataWindow(custTabPbWindow,"#1","credit_score",creditScore)
		// SetValue_PBDataWindow(custTabPbWindow,"#1","email",Email)
		// //Logger
		// writeReportLog("Updated the data in the Fields USResident, Credit Score + Email","Passed","","")
	// else
		// writeReportLog("Customer Tab in F2 Window did not get Loaded. Please check ", "Failed","","")		
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to setValuesIn_CustomerTab","Failed", Error_Description ,"")

//********************************************************************************
//This will Navigate to Specified Tab
// navigateToTab(String tabName)
	// %FuncInfo[Desc="This will Navigate to Specified Tab",Group="BranchPlusFunctions"]
	// BranchPlus.CustomerF2Window.PbTabStrip("TabStripe").Select tabName
	// Sleep (3)
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to navigateToTab","Failed", Error_Description ,"")

//********************************************************************************
//This will set the Values in the Budget Tab
// enterValuesIn_BudgetTab(String monthlyInc1,String monthlyInc2,String montlyPay1,String montlyPay2,String montlyPay3,String montlyPay4)
	// %FuncInfo[Desc="This will set the Values in the Budget Tab",Group="BranchPlusFunctions"]
	// //BranchPlus.CustomerF2Window.PbDataWindow("dw_budget").Check CheckPoint("dw_budget")
	// if Err.count <> 0 
		// //Ignoring the Error
	// Set budgetPBWindow = BranchPlus.CustomerF2Window.PbDataWindow("dw_budget")
	// if budgetPBWindow.IsPresent() 
		// SetValue_PBDataWindow(budgetPBWindow,"#1","monthly_income",monthlyInc1)
		// SetValue_PBDataWindow(budgetPBWindow,"#2","monthly_income",monthlyInc2)
		// SetValue_PBDataWindow(budgetPBWindow,"#3","monthly_payment",montlyPay1)
		// SetValue_PBDataWindow(budgetPBWindow,"#4","monthly_payment",montlyPay2)
		// SetValue_PBDataWindow(budgetPBWindow,"#5","monthly_payment",montlyPay3)
		// SetValue_PBDataWindow(budgetPBWindow,"#6","monthly_payment",montlyPay4)		
		// //Logger
		// writeReportLog("Data in the Budget Tab has been updated","Passed","","")
	// else
		// writeReportLog("Budget Tab in F2 Window did not get Loaded. Please check ", "Failed","","")		
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to enterValuesIn_BudgetTab","Failed", Error_Description ,"")

//********************************************************************************
//This will click on the "Add Row" Button
// clickButton_AddRow()
	// %FuncInfo[Desc="This will click on the "Add Row" Button",Group="BranchPlusFunctions"]
	// BranchPlus.InsightObject("btnAddRow").Click()
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to clickButton_AddRow","Failed", Error_Description ,"")

//********************************************************************************
//This will Add the Reference Details in Reference Tab
// addReferenceDetails_ReferenceTab(String rowNum,String referenceType,String firstName,String lastName,String homePhone,String cellPhone,String otherPhone)
	// %FuncInfo[Desc="This will Add the Reference Details in Reference Tab",Group="BranchPlusFunctions"]
	// Set refPBWindow =BranchPlus.CustomerF2Window.PbDataWindow("dw_list_reference") 
	// if refPBWindow.IsPresent() 
		// Set refPBWindow =BranchPlus.CustomerF2Window.PbDataWindow("dw_list_reference")
		// SetValue_PBDataWindow(refPBWindow, rowNum, "cust_ref_type", referenceType)
		// TypeText_PBDataWindow(refPBWindow, rowNum, "first_name", firstName)
		// TypeText_PBDataWindow(refPBWindow, rowNum, "last_name", lastName)
		// SetValue_PBDataWindow(refPBWindow, rowNum, "phone1", homePhone)
		// SetValue_PBDataWindow(refPBWindow, rowNum, "phone2", cellPhone)
		// SetValue_PBDataWindow(refPBWindow, rowNum, "phone3", otherPhone)
		// //Logger
		// writeReportLog("New Reference " + rowNum + " has been Added >>" + lastName + "," + firstName ,"Passed","","")
	// else
		// writeReportLog("Reference Tab in F2 Window did not get Loaded. Please check ", "Failed","","")		
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to addReferenceDetails_ReferenceTab","Failed", Error_Description ,"")

//********************************************************************************
//This will enter the mandatory information in the Insurance Tab
// enterInsuranceDetails_InsuranceTab(String rowNum,String companyName,String PolicyNumber,String startDate,String endDate)
	// %FuncInfo[Desc="This will enter the mandatory information in the Insurance Tab",Group="BranchPlusFunctions"]
	// BranchPlus.CustomerF2Window.PbDataWindow("dw_insurance").Check CheckPoint("dw_insurance")
	// Set insPBWindow = BranchPlus.CustomerF2Window.PbDataWindow("dw_insurance")
	// if insPBWindow.IsPresent() 
		// Set insPBWindow = BranchPlus.CustomerF2Window.PbDataWindow("dw_insurance")
		// SetValue_PBDataWindow(insPBWindow,rowNum,"company_name",companyName)
		// SetValue_PBDataWindow(insPBWindow,rowNum,"policy_nbr",PolicyNumber)
		// TypeText_PBDataWindow(insPBWindow,rowNum,"start_dt",startDate)
		// TypeText_PBDataWindow(insPBWindow,rowNum,"end_dt",endDate)
		// //Logger
		// writeReportLog("New Insurance " +  rowNum + " has been added","Passed","","")
	// else
		// writeReportLog("Insurance Tab in F2 Window did not get Loaded. Please check ", "Failed","","")	
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to enterInsuranceDetails_InsuranceTab","Failed", Error_Description ,"")

//********************************************************************************
//This will select the Value in the Status Select List in F2 window Account Tab
// changeAccountStatus_InAccountTab(String accStatus)
	// %FuncInfo[Desc="This will select the Value in the Status Select List in F2 window Account Tab",Group="BranchPlusFunctions"]
	// BranchPlus.CustomerF2Window.dw_acct.Check CheckPoint("dw_acct")
	// Sleep (1)
	// BranchPlus.CustomerF2Window.dw_acct.SetValue(CellData "#1","acct_status",accStatus
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to changeAccountStatus_InAccountTab","Failed", Error_Description ,"")

//********************************************************************************
//This will click on Process Button
// clickButton_Process()
	// %FuncInfo[Desc="This will click on Process Button",Group="BranchPlusFunctions"]
	// BranchPlus.InsightObject("btnProcess").Click()
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to clickButton_Process","Failed", Error_Description ,"")
//******************************************************************************* 
//This will click on "x" Close button
// closeCurrentWindow()
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// Sleep(3)
	// BranchPlus.btnClose.Click()
	// Sleep(3)
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to closeCurrentWindow","Failed", Error_Description ,"")

//Wait till Credt Decision Loads
// waitTillCreditDecisionLoads(String expectedTitle)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// AppObject aocrdDecision
	// String sGetwinTitle
	// for(Integer i=1; i<=10; i++)
		// //Get Window Title
		// aocrdDecision = BranchPlus.CreditDecision
		// sGetwinTitle = aocrdDecision.GetAttr("Text")
			// if sGetwinTitle.IndexOf(expectedTitle) > 0 
				// break

//Click on //Add Row// Button
// // Click_Add_Row_Button()
	// // %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// // //Click on //Add Row// Button
	// // BranchPlus.CreditDecision.btnNext.Click()

//This will enter the Co-Applicant Details in Credit Decision Window
// // enter_Co_ApplicantDetails_CreditDecisionWindow(String row_Num,String lastName,String firstName,String SSN,String dob,String applicant_type)
	// // %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// // AppObject aoCrdDecision1
	// // //Create Object for Data Window
	// // aoCrdDecision1 = CreditDecisionSTEP.CoApplicantTable
	// // //Select Type
	// // TypeText_PBDataWindow(aoCrdDecision1,row_Num,"affil_type",applicant_type)
	// // //Enter Last Name
	// // TypeText_PBDataWindow(aoCrdDecision1,row_Num,"last_name",lastName)
	// // //Enter First Name
	// // TypeText_PBDataWindow(aoCrdDecision1,row_Num,"first_name",firstName)
	// // //Enter SSN
	// // // SetValue_PBDataWindow(crdDecision1,row_Num,"ssn",SSN)
	// // TypeText_PBDataWindow(aoCrdDecision1,row_Num,"ssn",SSN)
	// // //Enter DOB
	// // // SetValue_PBDataWindow(crdDecision1,row_Num,"dob_dt",dob)
	// // TypeText_PBDataWindow(aoCrdDecision1,row_Num,"dob_dt",dob)
	// // //Error Handling
	// // if GetErrorCount()>0  			
		// // writeReportLog("Failed to enter_Co_ApplicantDetails_CreditDecisionWindow","Failed", Error_Description ,"")

//This will enter the Co_Applicant Address in Credit Decision Window
// // enter_Co_ApplicantAddess_CreditDecisionWindow(String row_num,String addr1,String zipCode)
	// // %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// // AppObject aoCrdDecision1
	// // //Co-Applicant Address	
	// // aoCrdDecision1 = CreditDecisionSTEP.CoApplicantTable
	// // //Set Address 1
	// // SetValue_PBDataWindow(aoCrdDecision1,row_num,"addr1",addr1)	
	// // //Enter Zipcode
	// // SetValue_PBDataWindow(aoCrdDecision1,row_num,"zipcode",zipCode)	
	// // //Error Handling


//This will handel the USPS Window for Co-Applicant
// // handleUSPSWindow_CoApplicant()
	// // %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// // if BranchPlus.CreditDecision.USPS_Window.IsPresent() 
		// // BranchPlus.CreditDecision.USPS_Window.btnUseAddressAbove.Click()
		// // Print("USPS Window for Co-Applicant appeared and Handeled","Passed")
	// // else
		// // LogError("USPS Window for Co-Applicant does not exist if Failed")
	// // 
//Update CoApplicant Details
// // Update_CoApplicant_Details(String row_num,String Co_Applicant_Last_Name,String Co_Applicant_First_Name,String Co_Applicant_SSN,String Co_Applicant_DOB,String customer_Type)
	// // %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// // //Select //Add Row// Button
	// // Click_Add_Row_Button()
	// // //Enter Co-Applicant Details in Credit Decision Window
	// // enter_Co_ApplicantDetails_CreditDecisionWindow(row_num,Co_Applicant_Last_Name,Co_Applicant_First_Name,Co_Applicant_SSN,Co_Applicant_DOB,customer_Type)
	// // //Error Handling

//Select Cell in CoApplicant Window
// Select_Cell_CoApplicant_Window(String rowNum,String colName)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// //Select Cell in CoApplicant Window
	// AppObject aoCoAppWnd = CreditDecisionSTEP.CoApplicantTable
	// Select_PBDataWindow(aoCoAppWnd, rowNum,colName)
	// //Error Handling
	// if GetErrorCount()>0  			
		// writeReportLog("Failed to Select_Cell_CoApplicant_Window","Failed", Error_Description ,"")

//@Author Devaraju
//@Date 20 Apr 2018
//@Description This is to Validate the Dual Loan SSN Number
//@Param SSNNumber--> SSN Number
//Ex  ValidateDualLoanSSN("503765393")
// ValidateDualLoan_SSN(String SSNNumber)
	// %FuncInfo[Desc="This is to get the Loan Number from App DB based on Account status, Account Type Code and Delinquency Status for Reverse flow.",Group="BranchPlusFunctions"]
	// if BranchPlus.CreditDecision.PbWindow("pbname:=w_message", "regexpwndtitle:=Branch PLUS").WaitWhileExists(5) 
	// writeReportLog("Looks Like there is already a Customer on file with the above SSN Number"& SSNNumber,"Failed",FailComments,"")
	// BranchPlus.CreditDecision.PbWindow("pbname:=w_message").PbButton("pbname:=cb_1").Click()   
	// ExitTest
	// //Error Handling
		// if GetErrorCount()>0  			
			// writeReportLog("Failed to ValidateDualLoan_SSN","Failed", Error_Description ,"")


